@inject IDataAccess DataAccess
@attribute [StreamRendering]
@rendermode InteractiveServer

@if (Workspaces == null)
{
    <p>Loading Workspaces...</p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h3>Workspaces</h3>
        </div>
        <div class="card-body">
            <div class="btn-group">
                <b>Select Workspace</b>
                @foreach (var workspace in Workspaces)
                {
                    <button class="btn btn-primary m-1" type="button">@workspace.Name</button>
                }
                <button class="btn btn-success m-1" type="button">+Add Workspace</button>
            </div>
        </div>
    </div>
    

    @foreach (var workspace in Workspaces)
    {
        <BoardsComponent WorkspaceId="@workspace.Id"/>
    }
    
}
@code {
    [Parameter]
    public required string UserId { get; set; }

    private List<KWorkspace>? Workspaces { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Workspaces = (await DataAccess.GetUserWorkspaces(UserId)).ToList();
    }
}
